// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.4
// source: tokenizer.proto

package schemapb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TokenizationRequest struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Text          string                           `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Parameters    []*TokenizationRequest_Parameter `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenizationRequest) Reset() {
	*x = TokenizationRequest{}
	mi := &file_tokenizer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenizationRequest) ProtoMessage() {}

func (x *TokenizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tokenizer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenizationRequest.ProtoReflect.Descriptor instead.
func (*TokenizationRequest) Descriptor() ([]byte, []int) {
	return file_tokenizer_proto_rawDescGZIP(), []int{0}
}

func (x *TokenizationRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TokenizationRequest) GetParameters() []*TokenizationRequest_Parameter {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type TokenizationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tokens        []*Token               `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenizationResponse) Reset() {
	*x = TokenizationResponse{}
	mi := &file_tokenizer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenizationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenizationResponse) ProtoMessage() {}

func (x *TokenizationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tokenizer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenizationResponse.ProtoReflect.Descriptor instead.
func (*TokenizationResponse) Descriptor() ([]byte, []int) {
	return file_tokenizer_proto_rawDescGZIP(), []int{1}
}

func (x *TokenizationResponse) GetTokens() []*Token {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type Token struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Text           string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	OffsetFrom     int32                  `protobuf:"varint,2,opt,name=offset_from,json=offsetFrom,proto3" json:"offset_from,omitempty"`
	OffsetTo       int32                  `protobuf:"varint,3,opt,name=offset_to,json=offsetTo,proto3" json:"offset_to,omitempty"`
	Position       int32                  `protobuf:"varint,4,opt,name=position,proto3" json:"position,omitempty"`
	PositionLength int32                  `protobuf:"varint,5,opt,name=position_length,json=positionLength,proto3" json:"position_length,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Token) Reset() {
	*x = Token{}
	mi := &file_tokenizer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_tokenizer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_tokenizer_proto_rawDescGZIP(), []int{2}
}

func (x *Token) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Token) GetOffsetFrom() int32 {
	if x != nil {
		return x.OffsetFrom
	}
	return 0
}

func (x *Token) GetOffsetTo() int32 {
	if x != nil {
		return x.OffsetTo
	}
	return 0
}

func (x *Token) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *Token) GetPositionLength() int32 {
	if x != nil {
		return x.PositionLength
	}
	return 0
}

type TokenizationRequest_Parameter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Values        []string               `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenizationRequest_Parameter) Reset() {
	*x = TokenizationRequest_Parameter{}
	mi := &file_tokenizer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenizationRequest_Parameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenizationRequest_Parameter) ProtoMessage() {}

func (x *TokenizationRequest_Parameter) ProtoReflect() protoreflect.Message {
	mi := &file_tokenizer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenizationRequest_Parameter.ProtoReflect.Descriptor instead.
func (*TokenizationRequest_Parameter) Descriptor() ([]byte, []int) {
	return file_tokenizer_proto_rawDescGZIP(), []int{0, 0}
}

func (x *TokenizationRequest_Parameter) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *TokenizationRequest_Parameter) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_tokenizer_proto protoreflect.FileDescriptor

const file_tokenizer_proto_rawDesc = "" +
	"\n" +
	"\x0ftokenizer.proto\x12\x16milvus.proto.tokenizer\"\xb7\x01\n" +
	"\x13TokenizationRequest\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12U\n" +
	"\n" +
	"parameters\x18\x02 \x03(\v25.milvus.proto.tokenizer.TokenizationRequest.ParameterR\n" +
	"parameters\x1a5\n" +
	"\tParameter\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x16\n" +
	"\x06values\x18\x02 \x03(\tR\x06values\"M\n" +
	"\x14TokenizationResponse\x125\n" +
	"\x06tokens\x18\x01 \x03(\v2\x1d.milvus.proto.tokenizer.TokenR\x06tokens\"\x9e\x01\n" +
	"\x05Token\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12\x1f\n" +
	"\voffset_from\x18\x02 \x01(\x05R\n" +
	"offsetFrom\x12\x1b\n" +
	"\toffset_to\x18\x03 \x01(\x05R\boffsetTo\x12\x1a\n" +
	"\bposition\x18\x04 \x01(\x05R\bposition\x12'\n" +
	"\x0fposition_length\x18\x05 \x01(\x05R\x0epositionLength2t\n" +
	"\tTokenizer\x12g\n" +
	"\bTokenize\x12+.milvus.proto.tokenizer.TokenizationRequest\x1a,.milvus.proto.tokenizer.TokenizationResponse\"\x00B6Z4github.com/milvus-io/milvus-proto/go-api/v2/schemapbb\x06proto3"

var (
	file_tokenizer_proto_rawDescOnce sync.Once
	file_tokenizer_proto_rawDescData []byte
)

func file_tokenizer_proto_rawDescGZIP() []byte {
	file_tokenizer_proto_rawDescOnce.Do(func() {
		file_tokenizer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tokenizer_proto_rawDesc), len(file_tokenizer_proto_rawDesc)))
	})
	return file_tokenizer_proto_rawDescData
}

var file_tokenizer_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_tokenizer_proto_goTypes = []any{
	(*TokenizationRequest)(nil),           // 0: milvus.proto.tokenizer.TokenizationRequest
	(*TokenizationResponse)(nil),          // 1: milvus.proto.tokenizer.TokenizationResponse
	(*Token)(nil),                         // 2: milvus.proto.tokenizer.Token
	(*TokenizationRequest_Parameter)(nil), // 3: milvus.proto.tokenizer.TokenizationRequest.Parameter
}
var file_tokenizer_proto_depIdxs = []int32{
	3, // 0: milvus.proto.tokenizer.TokenizationRequest.parameters:type_name -> milvus.proto.tokenizer.TokenizationRequest.Parameter
	2, // 1: milvus.proto.tokenizer.TokenizationResponse.tokens:type_name -> milvus.proto.tokenizer.Token
	0, // 2: milvus.proto.tokenizer.Tokenizer.Tokenize:input_type -> milvus.proto.tokenizer.TokenizationRequest
	1, // 3: milvus.proto.tokenizer.Tokenizer.Tokenize:output_type -> milvus.proto.tokenizer.TokenizationResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_tokenizer_proto_init() }
func file_tokenizer_proto_init() {
	if File_tokenizer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tokenizer_proto_rawDesc), len(file_tokenizer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tokenizer_proto_goTypes,
		DependencyIndexes: file_tokenizer_proto_depIdxs,
		MessageInfos:      file_tokenizer_proto_msgTypes,
	}.Build()
	File_tokenizer_proto = out.File
	file_tokenizer_proto_goTypes = nil
	file_tokenizer_proto_depIdxs = nil
}
